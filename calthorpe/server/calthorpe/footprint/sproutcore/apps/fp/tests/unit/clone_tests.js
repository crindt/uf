/* 
* UrbanFootprint-California, Scenario Planning Model
* 
* Copyright (C) 2012-2013 Calthorpe Associates
* 
* This program is free software: you can redistribute it and/or modify it under the terms of the
* GNU General Public License as published by the Free Software Foundation, version 3 of the License.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
* without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
* See the GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License along with this program.
* If not, see <http://www.gnu.org/licenses/>.
* 
* Contact: Calthorpe Associates (urbanfootprint@calthorpe.com)
* Firm contact: 2095 Rose Street Suite 201, Berkeley CA 94709.
* Phone: (510) 548-6800.      Web: www.calthorpe.com
* 
 */


 /* 
*
 */

var scenario;
module("clone test", {
    setup: function() {
        setupForTesting();
        scenario = Footprint.store.find(Footprint.Scenario).objectAt(0);
    }
});

test("Test nested fixtures", function() {
    try {

        clonedScenario = scenario.cloneRecord(Footprint.store);
        ok(clonedScenario.storeKey != null);
        ok(scenario.storeKey != clonedScenario.storeKey);

        equals(scenario.get('parent_config_entity'), clonedScenario.get('parent_config_entity'));

        logProperty(clonedScenario.get('db_entity_interests').objectAt(0));
        ok(clonedScenario.get('db_entity_interests'));
        equals(clonedScenario.get('db_entity_interests').length(),
               scenario.get('db_entity_interests').length(),
                'Expect equal number of db_entity_interests');
        equals(clonedScenario.get('db_entity_interests').toArray()[0].get('config_entity'), clonedScenario);

        ok(clonedScenario.get('built_form_sets').length() > 0, 'Expect more than 0 built_form_sets');
        equals(clonedScenario.get('built_form_sets').length(),
            scenario.get('built_form_sets').length(),
            "Expect equal number of built_form_sets");

        equals(clonedScenario.get('presentations').toArray()[0].get('config_entity'), clonedScenario);
        // Account for garbage presentation that gets generated by fixtures
        equals(clonedScenario.get('presentations').length(),
            scenario.get('presentations').length()-1,
            "Expect equal number of presentations");

        equals($.map(clonedScenario.getPath('selections.db_entities'),function(key) { return key;}).length,
            $.map(scenario.getPath('selections.db_entities'), function(key) { return key;}).length,
            'Expect equal number of db_entity selections');

    }
    catch(e) {
        logError(e);
        throw e;
    }
});
